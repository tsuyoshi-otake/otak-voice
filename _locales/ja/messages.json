{
  "extName": {
    "message": "otak-voice",
    "description": "Extension name."
  },
  "extDescription": {
    "message": "文脈修正、展開可能なメニュー、入力クリア、自動送信機能を備えた、あらゆるウェブサイト向けの音声入力。SPA対応。",
    "description": "Extension description."
  },
  "menuTooltip": {
    "message": "メニューを開く/閉じる",
    "description": "Tooltip for the main menu button."
  },
  "micTooltip": {
    "message": "音声入力\n音声認識を開始/停止",
    "description": "Tooltip for the microphone button."
  },
  "autoSubmitTooltip": {
    "message": "自動送信（オン/オフ）\n音声認識後に自動的に送信します",
    "description": "Tooltip for the auto-submit toggle button."
  },
  "clearTooltip": {
    "message": "入力フィールドをクリア\n現在の入力フィールドの内容を消去します",
    "description": "Tooltip for the clear button."
  },
  "proofreadTooltip": {
    "message": "内容を校閲 (GPT-4.1)\n入力フォームの内容全体を高精度モデルで校閲します",
    "description": "Tooltip for the proofread button."
  },
  "editTooltip": {
    "message": "テキストを編集 (GPT-4.1)\n入力フォームの内容を指示に基づいて編集します",
    "description": "Tooltip for the edit button."
  },
  "settingsTooltip": {
    "message": "設定\nAPIキーや言語設定を変更",
    "description": "Tooltip for the settings button."
  },
  "historyTooltip": {
    "message": "履歴\n過去の音声入力を表示",
    "description": "Tooltip for the history button."
  },
  "statusListening": {
    "message": "聞いています...",
    "description": "Status message when listening."
  },
  "statusListeningAppend": {
    "message": "聞いています...（追記）",
    "description": "Status message when listening in append mode."
  },
  "statusInputFound": {
    "message": "入力フィールドを選択",
    "description": "Status message when an input field is found/selected."
  },
  "statusInputNotFound": {
    "message": "入力フィールドが見つかりません",
    "description": "Status message when no input field is found."
  },
  "statusClearSuccess": {
    "message": "入力フィールドをクリアしました",
    "description": "Status message when input field is cleared."
  },
  "statusClearNotFound": {
    "message": "クリア対象の入力フィールドが見つかりません",
    "description": "Status message when no input field is found to clear."
  },
  "statusAutoSubmitOn": {
    "message": "自動送信: オン (音声認識後に自動的に送信します)",
    "description": "Status message when auto-submit is turned on."
  },
  "statusAutoSubmitOff": {
    "message": "自動送信: オフ (音声認識後に自動送信しません)",
    "description": "Status message when auto-submit is turned off."
  },
  "statusProofreading": {
    "message": "テキスト全体を校閲中...",
    "description": "Status message during proofreading."
  },
  "statusProofreadingModel": {
    "message": "$model$ でテキスト全体を校閲中...",
    "description": "Status message during proofreading indicating the model.",
    "placeholders": {
        "model": {
            "content": "$1",
            "example": "gpt-4-turbo"
        }
    }
  },
  "statusProofreadSuccess": {
    "message": "校閲が完了しました",
    "description": "Status message when proofreading is successful."
  },
  "statusProofreadError": {
    "message": "校閲中にエラーが発生しました",
    "description": "Status message when proofreading fails."
  },
   "statusProofreadErrorDetail": {
    "message": "校閲処理でエラーが発生しました: $error$",
    "description": "Status message when proofreading fails with details.",
    "placeholders": {
      "error": {
        "content": "$1",
        "example": "Network error"
      }
    }
  },
  "statusProofreadNotFound": {
    "message": "校閲対象の入力フィールドが見つかりません",
    "description": "Status message when no input field is found for proofreading."
  },
  "statusProofreadEmpty": {
    "message": "校閲する内容がありません",
    "description": "Status message when trying to proofread empty content."
  },
  "statusEditNotFound": {
"statusTwitterNotSupported": {
      "message": "x.comは現在サポートされていません。将来のアップデートで対応予定です。",
      "description": "Status message shown when trying to use voice input on Twitter/X.com, which is not supported."
    },
    "message": "編集対象の入力フィールドが見つかりません",
    "description": "Status message when no input field is found for editing."
  },
  "statusEditEmpty": {
    "message": "編集する内容がありません",
    "description": "Status message when trying to edit empty content."
  },
  "statusEditInstructionEmpty": {
    "message": "編集指示が入力されていません",
    "description": "Status message when edit instruction is empty."
  },
  "statusEditListening": {
    "message": "編集指示を音声で入力してください...",
    "description": "Status message when listening for edit instructions."
  },
  "statusEditListeningInterim": {
    "message": "編集指示を認識中",
    "description": "Status message when showing interim results for edit instructions."
  },
  "statusEditInstructionReceived": {
    "message": "編集指示を受け取りました",
    "description": "Status message when edit instruction is received."
  },
  "statusEditing": {
    "message": "GPT-4.1で編集中...",
    "description": "Status message during editing with GPT."
  },
  "statusEditingError": {
    "message": "編集処理中にエラーが発生しました",
    "description": "Status message when editing fails."
  },
  "statusEditingComplete": {
    "message": "テキストの編集が完了しました",
    "description": "Status message when editing is complete."
  },
  "statusApiKeyMissing": {
    "message": "APIキーが設定されていません。設定ボタンから設定してください。",
    "description": "Status message when API key is missing."
  },
  "statusApiKeyInvalid": {
    "message": "APIキーは「sk-」で始まる必要があります",
    "description": "Status message for invalid API key format."
  },
  "statusApiKeySaveSuccess": {
    "message": "APIキーを保存しました",
    "description": "Status message when API key is saved successfully."
  },
  "statusApiKeySaveError": {
    "message": "APIキー保存に失敗しました",
    "description": "Status message when API key saving fails."
  },
  "statusSpeechError": {
    "message": "エラー: $error$",
    "description": "Generic speech recognition error message.",
    "placeholders": {
      "error": {
        "content": "$1",
        "example": "network"
      }
    }
  },
  "statusSpeechErrorNoSpeech": {
    "message": "音声が検出されませんでした",
    "description": "Speech recognition error: no speech detected."
  },
  "statusSpeechErrorAudioCapture": {
    "message": "マイクにアクセスできません",
    "description": "Speech recognition error: audio capture failed."
  },
  "statusSpeechErrorNotAllowed": {
    "message": "マイクの使用が許可されていません",
    "description": "Speech recognition error: microphone permission denied."
  },
  "statusSpeechStartError": {
    "message": "音声認識を開始できませんでした",
    "description": "Error message when speech recognition fails to start."
  },
  "statusSpeechStop": {
    "message": "音声入力停止",
    "description": "Status message when speech input is stopped."
  },
  "statusCorrecting": {
    "message": "GPT-4.1-miniで校閲中...",
    "description": "Status message during GPT correction."
  },
  "statusCorrectionSuccess": {
    "message": "GPT校閲完了",
    "description": "Status message when GPT correction is successful."
  },
  "statusCorrectionError": {
    "message": "GPT校閲エラー: $error$",
    "description": "Status message when GPT correction fails.",
     "placeholders": {
      "error": {
        "content": "$1",
        "example": "API Error"
      }
    }
  },
  "statusCorrectionSkip": {
    "message": "APIキー未設定。校閲スキップ",
    "description": "Status message when skipping correction due to missing API key."
  },
  "statusCorrectionApiError": {
    "message": "APIエラー: $status$",
    "description": "Status message for OpenAI API errors.",
     "placeholders": {
      "status": {
        "content": "$1",
        "example": "401"
      }
    }
  },
  "statusCorrectionApiKeyInvalid": {
    "message": "APIキーが無効です。設定を確認してください。",
    "description": "Status message for invalid API key from API response."
  },
  "statusCorrectionResponseError": {
    "message": "GPT応答エラー。校閲スキップ",
    "description": "Status message for unexpected API response."
  },
  "modalSettingsTitle": {
    "message": "設定",
    "description": "Title for the settings modal."
  },
  "modalSettingsDescription": {
    "message": "OpenAI APIキーを入力して、音声認識の自動校正と手動校閲機能を有効にしてください。APIキーは拡張機能内に安全に保存され、OpenAIのAPIにのみ使用されます。",
    "description": "Description text in the settings modal."
  },
  "modalSettingsInputPlaceholder": {
    "message": "sk-...",
    "description": "Placeholder for the API key input field."
  },
  "modalSettingsLangLabel": {
    "message": "音声認識言語",
    "description": "Label for the language selection dropdown in settings."
  },
  "modalSettingsLangJa": {
    "message": "日本語 (ja-JP)",
    "description": "Japanese language option in settings."
  },
  "modalSettingsLangEn": {
    "message": "英語 (en-US)",
    "description": "English language option in settings."
  },
  "modalSettingsLangVi": {
    "message": "ベトナム語 (vi-VN)",
    "description": "Vietnamese language option in settings."
  },
  "settingAutoDetectInputFieldsLabel": {
    "message": "入力フィールドの自動検出",
    "description": "Label for the setting to enable/disable automatic input field detection."
  },
  "settingAutoDetectTooltipOn": {
    "message": "入力フィールドの自動認識 ON",
    "description": "Tooltip for the auto-detect setting when ON."
  },
  "settingAutoDetectTooltipOff": {
    "message": "入力フィールドの自動認識 OFF",
    "description": "Tooltip for the auto-detect setting when OFF."
  },
  "settingAutoCorrectionLabel": {
    "message": "音声認識後自動で校閲",
    "description": "Label for the setting to enable/disable automatic correction after voice recognition."
  },
  "settingAutoCorrectionTooltipOn": {
    "message": "音声認識後自動で校閲 ON",
    "description": "Tooltip for the auto-correction setting when ON."
  },
  "settingAutoCorrectionTooltipOff": {
    "message": "音声認識後自動で校閲 OFF",
    "description": "Tooltip for the auto-correction setting when OFF."
  },
  "settingUseHistoryContextLabel": {
    "message": "自動校閲時に過去の入力を文脈に含める",
    "description": "Label for the setting to enable/disable including past input in context during auto-correction."
  },
  "settingUseHistoryContextTooltipOn": {
    "message": "自動校閲時に過去の入力を文脈に含める ON",
    "description": "Tooltip for the use-history-context setting when ON."
  },
  "settingUseHistoryContextTooltipOff": {
    "message": "自動校閲時に過去の入力を文脈に含める OFF",
    "description": "Tooltip for the use-history-context setting when OFF."
  },
  "modalSettingsButtonCancel": {
    "message": "キャンセル",
    "description": "Cancel button text in the settings modal."
  },
  "modalSettingsButtonSave": {
    "message": "保存",
    "description": "Save button text in the settings modal."
  },
  "historyPanelTitle": {
    "message": "音声入力履歴:",
    "description": "Title for the history panel."
  },
  "historyPanelEmpty": {
    "message": "履歴はありません",
    "description": "Message shown when history is empty."
  },
  "logDomObserverStart": {
    "message": "DOM変更の監視を開始します（SPA対応）",
    "description": "Log message when the DOM observer starts."
  },
  "logSpaNavigationDetected": {
    "message": "SPA画面遷移を検出: 新しいテキストエリアが見つかりました",
    "description": "Log message when SPA navigation is detected."
  },
  "logSpaUiReinit": {
    "message": "SPA画面遷移後のUI再初期化を実行します",
    "description": "Log message when reinitializing UI after SPA navigation."
  },
  "logPollingUiNotFound": {
    "message": "ポーリングによるチェック: UIが見つからないため再初期化します",
    "description": "Log message when UI is not found during polling check."
  },
  "logForceSetSuccess": {
    "message": "テキストエリアの値を強制的に設定しました:",
    "description": "Log message when force setting textarea value succeeds."
  },
  "logForceSetError": {
    "message": "テキストエリア値の強制設定に失敗:",
    "description": "Log message when force setting textarea value fails."
  },
  "logTypingSimulateError": {
    "message": "タイピングシミュレートエラー:",
    "description": "Log message when typing simulation fails."
  },
  "logPaperPlaneButtonFound": {
    "message": "紙飛行機アイコン付き送信ボタンを発見しました",
    "description": "Log message when the paper plane submit button is found."
  },
  "logBgPrimaryButtonFound": {
    "message": "bg-primary/40クラスを持つ送信ボタンを発見しました",
    "description": "Log message when a submit button with bg-primary/40 class is found."
  },
  "logPaperPlaneButtonDisabled": {
    "message": "紙飛行機送信ボタンが無効状態です。Reactのステート更新を促します...",
    "description": "Log message when the paper plane button is disabled."
  },
  "logSubmitButtonDisabled": {
    "message": "送信ボタンが無効状態です。Reactのステート更新を促します...",
    "description": "Log message when the submit button is disabled."
  },
  "logStateUpdateError": {
    "message": "ステート更新促進エラー:",
    "description": "Log message when triggering state update fails."
  },
  "logSubmitButtonCandidates": {
    "message": "送信ボタン候補:",
    "description": "Log message showing submit button candidates."
  },
  "logInitializing": {
    "message": "Enhanced Voice Input Script v$version$ (Extension) を初期化中...",
    "description": "Log message during initialization.",
    "placeholders": {
      "version": {
        "content": "$1",
        "example": "1.7"
      }
    }
  },
  "logSpeechNotSupported": {
    "message": "このブラウザは音声認識をサポートしていません。",
    "description": "Log message when Speech Recognition API is not supported."
  },
  "alertSpeechNotSupported": {
    "message": "お使いのブラウザは音声認識をサポートしていません。",
    "description": "Alert message when Speech Recognition API is not supported."
  },
  "logUiAlreadyExists": {
    "message": "UIは既に存在します。",
    "description": "Log message when UI elements already exist."
  },
  "logInitializationComplete": {
    "message": "Enhanced Voice Input Script v$version$ (Extension) の初期化が完了しました。",
    "description": "Log message when initialization is complete.",
    "placeholders": {
      "version": {
        "content": "$1",
        "example": "1.7"
      }
    }
  },
  "logSettingsLoaded": {
    "message": "設定を読み込みました:",
    "description": "Log message when settings are loaded."
  },
  "logApiKeySet": {
    "message": "設定済み",
    "description": "Log part indicating API key is set."
  },
  "logApiKeyNotSet": {
    "message": "未設定",
    "description": "Log part indicating API key is not set."
  },
  "logSettingsLoadError": {
    "message": "設定読み込みエラー:",
    "description": "Log message when loading settings fails."
  },
  "logSettingsSaved": {
    "message": "設定を保存しました:",
    "description": "Log message when settings (API key, language) are saved."
  },
  "logSettingsSaveError": {
    "message": "設定の保存に失敗しました:",
    "description": "Log message when saving settings fails."
  },
  "alertApiKeyMissing": {
    "message": "APIキーが設定されていません。設定ボタンから設定してください。",
    "description": "Alert message when API key is missing during save attempt."
  },
  "alertApiKeyInvalid": {
    "message": "APIキーの形式が無効です。「sk-」で始まる必要があります。",
    "description": "Alert message for invalid API key format during save attempt."
  },
  "logApiKeySaveError": {
    "message": "APIキー保存エラー:",
    "description": "Log message when saving API key fails."
  },
  "statusSettingsSaveSuccess": {
    "message": "設定を保存しました",
    "description": "Status message when settings are saved successfully."
  },
  "statusSettingsSaveError": {
    "message": "設定の保存に失敗しました",
    "description": "Status message when saving settings fails."
  },
  "alertSpeechApiNotAvailable": {
    "message": "音声認識APIが利用できません。",
    "description": "Alert message when Speech Recognition API is not available."
  },
  "logCorrectionError": {
    "message": "校閲処理エラー:",
    "description": "Log message for general correction error."
  },
  "logCorrectionErrorAppend": {
    "message": "校閲処理エラー（追記モード）:",
    "description": "Log message for correction error in append mode."
  },
  "logCorrectionErrorOverwrite": {
    "message": "校閲処理エラー（上書きモード）:",
    "description": "Log message for correction error in overwrite mode."
  },
  "logSpeechRecognitionError": {
    "message": "音声認識エラー:",
    "description": "Log message for speech recognition error."
  },
  "logSpeechStartError": {
    "message": "音声認識開始エラー:",
    "description": "Log message when starting speech recognition fails."
  },
  "logSpeechStopError": {
    "message": "音声認識の停止に失敗しました:",
    "description": "Log message when stopping speech recognition fails."
  },
  "logSpecificTextareaFound": {
    "message": "指定された特定のテキストエリアを発見しました",
    "description": "Log message when the specific textarea is found."
  },
  "logSimilarTextareaFound": {
    "message": "近い仕様のテキストエリアを発見しました",
    "description": "Log message when a similar textarea is found."
  },
  "logTailwindTextareaFound": {
    "message": "Tailwindスタイルのテキストエリアを発見しました",
    "description": "Log message when a Tailwind styled textarea is found."
  },
  "logMessageTextareaFound": {
    "message": "メッセージ用テキストエリアを発見しました",
    "description": "Log message when a message textarea is found."
  },
  "logEventDispatchErrorAppend": {
    "message": "イベント発火エラー（追記）:",
    "description": "Log message for event dispatch error in append mode."
  },
  "logProofreadError": {
    "message": "校閲処理エラー:",
    "description": "Log message for proofreading error."
  },
  "logOpenAiApiError": {
    "message": "OpenAI APIエラー:",
    "description": "Log message for OpenAI API error."
  },
  "logOpenAiApiResponseUnexpected": {
    "message": "OpenAI APIからの予期せぬレスポンス:",
    "description": "Log message for unexpected OpenAI API response."
  },
  "logProofreadRequestError": {
    "message": "GPT校閲リクエストエラー:",
    "description": "Log message for GPT proofread request error."
  },
  "logReactTypingSimulated": {
    "message": "React対応：タイピングシミュレーションで入力しました",
    "description": "Log message when React typing simulation is used."
  },
  "logFallbackMethod": {
    "message": "フォールバック：従来の方法で入力します",
    "description": "Log message when using the fallback input method."
  },
  "logEventDispatchErrorFallback": {
    "message": "イベント発火エラー（フォールバック）:",
    "description": "Log message for event dispatch error in fallback mode."
  },
  "logUiNotFoundHealing": {
    "message": "UI要素が見つかりません。再生成を試みます...",
    "description": "Log message when UI elements are not found during self-healing."
  },
  "logExtensionLoaded": {
    "message": "Enhanced Universal Voice Input (Chrome Extension) loaded.",
    "description": "Log message when the extension has finished loading."
  },
  "logApiKeyMissingSkip": {
    "message": "APIキーが設定されていないため、GPT校閲をスキップします。",
    "description": "Log message when skipping GPT correction due to missing API key."
  },
  "logApiRequestFailedUseOriginal": {
    "message": "APIリクエスト失敗 ($status$)。元のテキストを使用します。",
    "description": "Log message when API request fails and original text is used.",
    "placeholders": {
      "status": {
        "content": "$1",
        "example": "401"
      }
    }
  },
  "logApiResponseUnexpected": {
    "message": "OpenAI APIからの予期せぬレスポンス。元のテキストを使用します。",
    "description": "Log message when API response is unexpected and original text is used."
  },
  "logCorrectionRequestErrorUseOriginal": {
    "message": "GPT校閲リクエスト中にエラーが発生しました。元のテキストを使用します。",
    "description": "Log message when correction request fails and original text is used."
  },
  "statusProcessingInProgress": {
    "message": "別の処理が進行中です。完了までお待ちください。",
    "description": "Status message when another processing is already in progress."
  },
  "statusSubmitDisabled": {
    "message": "送信ボタンが無効状態です",
    "description": "Status message when the submit button is disabled."
  },
  "statusSubmitClicked": {
    "message": "送信ボタンをクリックしました",
    "description": "Status message when the submit button is clicked."
  },
  "statusAutoDetectOff": {
    "message": "入力フィールドの自動認識がオフです。入力フィールドを直接クリックしてください。",
    "description": "Status message when auto-detect input fields is turned off."
  },
  "statusUsingModalDialog": {
    "message": "入力フィールドが見つかりません。音声認識結果はモーダルウィンドウに表示されます。",
    "description": "Status message shown when no input field is found and modal dialog will be used."
  },
  "recognitionModalTitle": {
    "message": "音声認識結果",
    "description": "Title for the recognition result modal dialog."
  },
  "recognitionModalCopyButton": {
    "message": "コピー",
    "description": "Copy button text in the recognition result modal dialog."
  },
  "recognitionModalCopied": {
    "message": "コピーしました！",
    "description": "Text shown after copying in the recognition result modal dialog."
  },
  "recognitionModalCloseButton": {
    "message": "閉じる",
    "description": "Close button text in the recognition result modal dialog."
  },
  "modalToggleTooltip": {
    "message": "モーダル切替\n音声認識結果の表示方法を切り替えます",
    "description": "Tooltip for the modal toggle button."
  },
  "modalShowTooltip": {
    "message": "モーダル表示",
    "description": "Tooltip for showing the modal window."
  },
  "modalHideTooltip": {
    "message": "モーダル非表示",
    "description": "Tooltip for hiding the modal window."
  },
  "recognitionModalPlaceholder": {
    "message": "音声を認識中...",
    "description": "Placeholder text shown in the recognition modal while listening."
  },
  "statusModalVisible": {
    "message": "モーダル表示: オン（結果をウィンドウに表示）",
    "description": "Status message when modal window is visible."
  },
  "statusModalHidden": {
    "message": "モーダル表示: オフ（結果を直接入力）",
    "description": "Status message when modal window is hidden."
  },
  "themeToggleTooltip": {
    "message": "テーマ切替\nライト/ダークテーマを切り替えます",
    "description": "Tooltip for the theme toggle button."
  },
  "themeToggleToLight": {
    "message": "ライトテーマに切替",
    "description": "Tooltip for the theme toggle button when in dark mode."
  },
  "themeToggleToDark": {
    "message": "ダークテーマに切替",
    "description": "Tooltip for the theme toggle button when in light mode."
  },
  "statusThemeLight": {
    "message": "ライトテーマに切り替えました",
    "description": "Status message when theme is switched to light."
  },
  "statusThemeDark": {
    "message": "ダークテーマに切り替えました",
    "description": "Status message when theme is switched to dark."
  },
  "modalSettingsThemeLabel": {
    "message": "テーマ",
    "description": "Label for the theme selection dropdown in settings."
  },
  "modalSettingsThemeDark": {
    "message": "ダークテーマ",
    "description": "Dark theme option in settings."
  },
  "modalSettingsThemeLight": {
    "message": "ライトテーマ",
    "description": "Light theme option in settings."
  },
  "errorNetworkFetchFailed": {
    "message": "ネットワーク接続エラー: データの取得に失敗しました",
    "description": "Error message for network fetch failure"
  },
  "errorNetworkTimeout": {
    "message": "ネットワークタイムアウト: 接続に時間がかかりすぎています",
    "description": "Error message for network timeout"
  },
  "errorNetworkOffline": {
    "message": "オフラインエラー: インターネット接続を確認してください",
    "description": "Error message for offline status"
  },
  "errorApiInvalidKey": {
    "message": "APIキーが無効です",
    "description": "Error message for invalid API key"
  },
  "errorApiUnauthorized": {
    "message": "API認証エラー: APIキーを確認してください",
    "description": "Error message for API unauthorized access"
  },
  "errorApiRateLimit": {
    "message": "APIレート制限に達しました。しばらく待ってから再試行してください",
    "description": "Error message for API rate limit"
  },
  "errorApiBadRequest": {
    "message": "APIリクエストエラー: 無効なリクエストです",
    "description": "Error message for API bad request"
  },
  "errorApiServerError": {
    "message": "APIサーバーエラー: サービスに問題が発生しています",
    "description": "Error message for API server error"
  },
  "errorApiUnexpectedResponse": {
    "message": "API応答エラー: 予期しない応答を受信しました",
    "description": "Error message for unexpected API response"
  },
  "errorInputEmptyContent": {
    "message": "内容が空です",
    "description": "Error message for empty content"
  },
  "errorInputFieldNotFound": {
    "message": "入力フィールドが見つかりません",
    "description": "Error message for input field not found"
  },
  "errorSpeechNotSupported": {
    "message": "お使いのブラウザは音声認識をサポートしていません",
    "description": "Error message for speech recognition not supported"
  },
  "errorSpeechAborted": {
    "message": "音声認識が中断されました",
    "description": "Error message for aborted speech recognition"
  },
  "errorSpeechStopFailed": {
    "message": "音声認識の停止に失敗しました",
    "description": "Error message for failed speech recognition stop"
  },
  "errorStorageSaveFailed": {
    "message": "設定の保存に失敗しました",
    "description": "Error message for storage save failure"
  },
  "errorStorageLoadFailed": {
    "message": "設定の読み込みに失敗しました",
    "description": "Error message for storage load failure"
  },
  "errorDomElementNotFound": {
    "message": "要素が見つかりません",
    "description": "Error message for DOM element not found"
  },
  "errorDomEventDispatchFailed": {
    "message": "イベント発火に失敗しました",
    "description": "Error message for DOM event dispatch failure"
  },
  "errorDomManipulationFailed": {
    "message": "DOM操作に失敗しました",
    "description": "Error message for DOM manipulation failure"
  },
  "errorUnknown": {
    "message": "不明なエラーが発生しました",
    "description": "Error message for unknown errors"
  },
  "autoCorrectionPromptLabel": {
    "message": "自動校閲プロンプト",
    "description": "Label for the auto-correction prompt textarea in settings"
  },
  "proofreadingPromptLabel": {
    "message": "手動校閲プロンプト",
    "description": "Label for the proofreading prompt textarea in settings"
  },
  "promptPlaceholder": {
    "message": "プロンプトを入力してください。何も入力されていない場合はデフォルトのプロンプトで処理されます。",
    "description": "Placeholder text for prompt textareas in settings"
  },
  "errorInvalidPrompt": {
    "message": "無効なプロンプトです",
    "description": "Error message for invalid prompt format"
  },
  "statusPreparingRecognition": {
    "message": "音声認識の準備中...",
    "description": "Status message when preparing speech recognition"
  }
}